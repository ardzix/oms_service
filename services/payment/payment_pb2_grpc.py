# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import payment_pb2 as payment__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in payment_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class PaymentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ProcessPayment = channel.unary_unary(
                '/payment.PaymentService/ProcessPayment',
                request_serializer=payment__pb2.ProcessPaymentRequest.SerializeToString,
                response_deserializer=payment__pb2.ProcessPaymentResponse.FromString,
                _registered_method=True)
        self.RefundPayment = channel.unary_unary(
                '/payment.PaymentService/RefundPayment',
                request_serializer=payment__pb2.RefundPaymentRequest.SerializeToString,
                response_deserializer=payment__pb2.RefundPaymentResponse.FromString,
                _registered_method=True)
        self.GetPaymentStatus = channel.unary_unary(
                '/payment.PaymentService/GetPaymentStatus',
                request_serializer=payment__pb2.GetPaymentStatusRequest.SerializeToString,
                response_deserializer=payment__pb2.GetPaymentStatusResponse.FromString,
                _registered_method=True)
        self.GetPaymentDetail = channel.unary_unary(
                '/payment.PaymentService/GetPaymentDetail',
                request_serializer=payment__pb2.GetPaymentDetailRequest.SerializeToString,
                response_deserializer=payment__pb2.GetPaymentDetailResponse.FromString,
                _registered_method=True)
        self.ListPayments = channel.unary_unary(
                '/payment.PaymentService/ListPayments',
                request_serializer=payment__pb2.ListPaymentsRequest.SerializeToString,
                response_deserializer=payment__pb2.ListPaymentsResponse.FromString,
                _registered_method=True)


class PaymentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ProcessPayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefundPayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaymentStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaymentDetail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPayments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PaymentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ProcessPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessPayment,
                    request_deserializer=payment__pb2.ProcessPaymentRequest.FromString,
                    response_serializer=payment__pb2.ProcessPaymentResponse.SerializeToString,
            ),
            'RefundPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.RefundPayment,
                    request_deserializer=payment__pb2.RefundPaymentRequest.FromString,
                    response_serializer=payment__pb2.RefundPaymentResponse.SerializeToString,
            ),
            'GetPaymentStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentStatus,
                    request_deserializer=payment__pb2.GetPaymentStatusRequest.FromString,
                    response_serializer=payment__pb2.GetPaymentStatusResponse.SerializeToString,
            ),
            'GetPaymentDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentDetail,
                    request_deserializer=payment__pb2.GetPaymentDetailRequest.FromString,
                    response_serializer=payment__pb2.GetPaymentDetailResponse.SerializeToString,
            ),
            'ListPayments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPayments,
                    request_deserializer=payment__pb2.ListPaymentsRequest.FromString,
                    response_serializer=payment__pb2.ListPaymentsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'payment.PaymentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('payment.PaymentService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PaymentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ProcessPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/payment.PaymentService/ProcessPayment',
            payment__pb2.ProcessPaymentRequest.SerializeToString,
            payment__pb2.ProcessPaymentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RefundPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/payment.PaymentService/RefundPayment',
            payment__pb2.RefundPaymentRequest.SerializeToString,
            payment__pb2.RefundPaymentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPaymentStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/payment.PaymentService/GetPaymentStatus',
            payment__pb2.GetPaymentStatusRequest.SerializeToString,
            payment__pb2.GetPaymentStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPaymentDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/payment.PaymentService/GetPaymentDetail',
            payment__pb2.GetPaymentDetailRequest.SerializeToString,
            payment__pb2.GetPaymentDetailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListPayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/payment.PaymentService/ListPayments',
            payment__pb2.ListPaymentsRequest.SerializeToString,
            payment__pb2.ListPaymentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
