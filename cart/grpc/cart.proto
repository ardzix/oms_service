syntax = "proto3";

package cart;

service CartService {
    // Get or create a cart by user_hash and brand_hash
    rpc GetOrCreateCart(GetOrCreateCartRequest) returns (GetOrCreateCartResponse);
    
    // Get cart details by cart hash
    rpc GetCartDetail(GetCartDetailRequest) returns (GetCartDetailResponse);

    // Add an item to the cart
    rpc AddToCart(AddToCartRequest) returns (GetCartItemDetailResponse);

    // Apply promo to a cart item
    rpc ApplyCartItemPromo(ApplyCartItemPromoRequest) returns (GetCartItemDetailResponse);

    // Apply promo to a cart
    rpc ApplyCartPromo(ApplyCartPromoRequest) returns (GetCartDetailResponse);

    // Remove an item from the cart
    rpc RemoveCartItem(RemoveCartItemRequest) returns (RemoveCartItemResponse);

    // Clear all items from the cart
    rpc ClearCart(ClearCartRequest) returns (ClearCartResponse);
}

// Request to get or create a cart
message GetOrCreateCartRequest {
    string user_hash = 1;
    string brand_hash = 2;
}

// Response for get or create cart
message GetOrCreateCartResponse {
    Cart cart = 1;
}

// Request to get cart details by cart hash
message GetCartDetailRequest {
    string cart_hash = 1;
}

// Response for cart details
message GetCartDetailResponse {
    Cart cart = 1;
    repeated CartItem cart_items = 2;
}

// Request to add an item to the cart
message AddToCartRequest {
    string cart_hash = 1;
    string product_hash = 2;
    int32 quantity = 3;
}

// Response with cart item details
message GetCartItemDetailResponse {
    CartItem cart_item = 1;
}

// Request to apply a promo to a cart item
message ApplyCartItemPromoRequest {
    string cart_item_hash = 1;
    string promo_hash = 2;
}

// Request to apply a promo to a cart
message ApplyCartPromoRequest {
    string cart_hash = 1;
    string promo_hash = 2;
}

// Request to remove an item from the cart
message RemoveCartItemRequest {
    string cart_item_hash = 1;
}

// Response for removing an item from the cart
message RemoveCartItemResponse {
    bool success = 1;
}

// Request to clear all items from the cart
message ClearCartRequest {
    string cart_hash = 1;
}

// Response for clearing the cart
message ClearCartResponse {
    bool success = 1;
}

// Cart details reflecting the model
message Cart {
    string hash = 1;
    string user_hash = 2;
    string brand_hash = 3;
    bool is_active = 4;
    string created_at = 5;
    string updated_at = 6;
    string coupon_code = 7;  // Field for coupon code
    string promo_hash = 8;   // Field for cart-level promo hash
    string available_promos = 9; // Field for available promos
}

// Cart item details reflecting the model
message CartItem {
    string hash = 1;
    string product_hash = 2;
    int32 quantity = 3;
    double price = 4;
    string coupon_code = 5;   // Field for coupon code
    string promo_hash = 6;
    double modified_price = 7;
    string available_promos = 8;  // Field for available promos
}
